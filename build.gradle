buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.1")
	}
}
plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.vaadin' version '24.1.5'
}

group = 'com.vladceresna'
version = '0.1'
sourceCompatibility = '17'

ext {
	set('vaadinVersion', "24.1.5")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
application{
	mainClass = 'com.vladceresna.netget.NetgetApplication'
}
vaadin {
	pnpmEnable = true
	productionMode = true
	generateBundle(true)
	optimizeBundle(true)
	vaadinBuildFrontend
}
springBoot{
	mainClass = 'com.vladceresna.netget.NetgetApplication'
	mainClassName = "com.vladceresna.netget.NetgetApplication"
}

jar {
	manifest {
		attributes 'Main-Class': 'com.vladceresna.netget.NetgetApplication'
	}
	from{
		configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
	}
	from('generated/jar-resources')
}
repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	//implementation 'org.jsoup:jsoup:1.10.2'
	implementation 'com.github.valb3r.letsencrypt-helper:letsencrypt-helper-tomcat:0.4.0'
	implementation 'redis.clients:jedis:4.0.0'

	implementation 'com.vaadin:vaadin-spring-boot-starter'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
}

tasks.withType(Jar) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.named('bootJar') {
	classpath += files('generated/jar-resources')
	mainClass = 'com.vladceresna.netget.NetgetApplication'
	launchScript()
}
tasks.named('test') {
	useJUnitPlatform()
}
